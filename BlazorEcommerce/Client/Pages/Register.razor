@page "/register"
@inject IAuthService AuthService

<PageTitle>Registration</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" type="email" />
        <ValidationMessage For="() => user.Email"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="() => user.Password"></ValidationMessage>
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="() => user.ConfirmPassword"></ValidationMessage>
    </div>
    <button type="submit" class="btn btn-primary mb-3">Register</button>
    <div class=@_messageCssClass>
        <span>@_message</span>
    </div>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    private string _message = String.Empty;
    private string _messageCssClass = String.Empty;

    private async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        _message = result.Message;

        if (result.Success)
        {
            _messageCssClass = "text-success";
        }
        else
        {
            _messageCssClass = "text-danger";
        }
    }
}